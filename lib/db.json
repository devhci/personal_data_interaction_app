import 'dart:collection';
import 'dart:io';

import 'package:flutter/material.dart';

import 'package:flutter_calendar_carousel/flutter_calendar_carousel.dart'
show CalendarCarousel;
import 'package:flutter_calendar_carousel/classes/event.dart';
import 'package:flutter_calendar_carousel/classes/event_list.dart';
import 'package:intl/intl.dart' show DateFormat;
import 'package:personal_data_interaction_app/firebase/DB.dart';
import 'package:personal_data_interaction_app/testFB.dart';

import 'package:personal_data_interaction_app/util/db_read_write.dart';
import 'package:flutter/foundation.dart';

import 'package:cloud_firestore/cloud_firestore.dart';

import 'package:path_provider/path_provider.dart';

void main() => runApp(new MyApp());

class MyApp extends StatelessWidget {
@override
Widget build(BuildContext context) {
return new MaterialApp(
title: 'dooboolab flutter calendar',
theme: new ThemeData(
primarySwatch: Colors.blue,
),
home: new MyHomePage(title: 'Monthly Calendar Viz'),
);
}
}

class MyHomePage extends StatefulWidget {
MyHomePage({Key key, this.title}) : super(key: key);

final String title;

@override
_MyHomePageState createState() => new _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
DB _db = DB();
DateTime _currentDate = DateTime(2019, 2, 3);
DateTime _currentDate2 = DateTime(2019, 2, 3);
String _currentMonth = '';

static Widget _eventIcon = new Container(
decoration: new BoxDecoration(

color: Colors.red.withOpacity(0.5),
borderRadius: BorderRadius.all(Radius.circular(100)),
border: Border.all(color: Colors.blue, width: 0.5)),
);

EventList<Event> _markedDateMap = new EventList<Event>(
events: {},
);

CalendarCarousel _calendarCarousel, _calendarCarouselNoHeader;

@override
void initState() {
for (int i = 0; i < 25; i++) {
i = i + 1;
_markedDateMap.add(
new DateTime(2019, 2, 3 + i),
new Event(
date: new DateTime(2019, 2, 3 + i),
title: 'Event 5',
icon: _eventIcon,
));
}

super.initState();
}

@override
Widget build(BuildContext context) {
_calendarCarouselNoHeader = CalendarCarousel<Event>(
todayBorderColor: Colors.green,
onDayPressed: (DateTime date, List<Event> events) {
this.setState(() => _currentDate2 = date);
events.forEach((event) => print(event.title));
},
weekendTextStyle: TextStyle(
color: Colors.red,
),
thisMonthDayBorderColor: Colors.grey,
weekFormat: false,
markedDatesMap: _markedDateMap,
height: 420.0,
selectedDateTime: _currentDate2,
daysHaveCircularBorder: false,
customGridViewPhysics: NeverScrollableScrollPhysics(),
markedDateShowIcon: true,
markedDateIconMaxShown: 2,
markedDateMoreShowTotal: false,
showHeader: false,
markedDateIconBuilder: (event) {
return event.icon;
},
nextMonthDayBorderColor: Colors.red,
todayTextStyle: TextStyle(
color: Colors.blue,
),
todayButtonColor: Colors.yellow,
selectedDayTextStyle: TextStyle(
color: Colors.yellow,
),
minSelectedDate: _currentDate,
maxSelectedDate: _currentDate.add(Duration(days: 60)),
onCalendarChanged: (DateTime date) {
this.setState(() => _currentMonth = DateFormat.yMMM().format(date));
},
);

return new Scaffold(
appBar: new AppBar(
title: new Text(widget.title),
),
body: SingleChildScrollView(
child: Column(
crossAxisAlignment: CrossAxisAlignment.start,
mainAxisAlignment: MainAxisAlignment.start,
children: <Widget>[
Container(
margin: EdgeInsets.symmetric(horizontal: 16.0),
child: _calendarCarousel,
),
Container(
margin: EdgeInsets.only(
top: 30.0,
bottom: 16.0,
left: 16.0,
right: 16.0,
),
child: new Row(
children: <Widget>[
FlatButton(

child: Text('PREV'),

onPressed: () {
setState(() {
_currentDate2 =
_currentDate2.subtract(Duration(days: 30));
_currentMonth =
DateFormat.yMMM().format(_currentDate2);
});


},

),
Expanded(
child: Text(
_currentMonth,
style: TextStyle(
fontWeight: FontWeight.bold,
fontSize: 24.0,
),
)),

FlatButton(
child: Text('NEXT'),


onPressed:
() {
setState(() {
_currentDate2 = _currentDate2.add(Duration(days: 30));
_currentMonth =
DateFormat.yMMM().format(_currentDate2);
});


},
)
],
),
),
Container(
margin: EdgeInsets.symmetric(horizontal: 16.0),
child: _calendarCarouselNoHeader,
),
],
),
));
}
}
